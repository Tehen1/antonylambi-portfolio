// Prisma Schema pour Portfolio Antony Lambinon
// Database: Neon PostgreSQL (serverless)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProjectCategory {
  seo
  blockchain
  ai
  webdev
}

enum ProjectStatus {
  draft
  live
  archived
}

enum SkillCategory {
  frontend
  backend
  blockchain
  ai
  devops
  seo
}

enum TechBadge {
  expert
  recent
}

model Project {
  id          String          @id @default(cuid())
  slug        String          @unique
  title       String
  description String
  category    ProjectCategory
  status      ProjectStatus
  tech        String[]
  metrics     Json
  images      String[]
  video       String?
  poster      String?
  liveUrl     String?
  githubUrl   String?
  highlight   Boolean         @default(false)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@index([category])
  @@index([status])
  @@index([highlight])
}

model Skill {
  id            String        @id @default(cuid())
  name          String        @unique
  category      SkillCategory
  percentage    Int
  projectsCount Int
  description   String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([category])
}

model Testimonial {
  id           String          @id @default(cuid())
  clientName   String
  clientAvatar String?
  rating       Int
  quote        String
  projectType  ProjectCategory
  company      String?
  position     String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt

  @@index([rating])
}

model TechStack {
  id            String        @id @default(cuid())
  name          String        @unique
  category      SkillCategory
  projectsCount Int
  badge         TechBadge?
  description   String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([category])
  @@index([badge])
}
